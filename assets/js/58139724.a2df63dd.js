"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6736],{3210:function(e){e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":0,"name":"ethereal-react","kind":1,"kindString":"Project","flags":{},"originalName":"","children":[{"id":69,"name":"ERC165_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"An ABI definition for ERC165."},"sources":[{"fileName":"abi.ts","line":18,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/ethereal-react/api/ethereal-react#ERC165_ABI","previousId":23,"nextId":68},{"id":68,"name":"ERC20_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"A minimal ABI definition for an ERC20 token."},"sources":[{"fileName":"abi.ts","line":4,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/ethereal-react/api/ethereal-react#ERC20_ABI","previousId":69,"nextId":70},{"id":70,"name":"ERC721_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"An ABI definition for an ERC721 (non-fungible) token.\\nThis ABI includes common extensions for metadata, and enumerability."},"sources":[{"fileName":"abi.ts","line":60,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/ethereal-react/api/ethereal-react#ERC721_ABI","previousId":68},{"id":4,"name":"Provider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"provider.tsx","line":16,"character":16}],"signatures":[{"id":5,"name":"Provider","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ProviderProps"}}],"type":{"type":"reference","name":"Element"}}],"permalink":"/ethereal-react/api/ethereal-react/function/Provider","nextId":108},{"id":108,"name":"RequireNetwork","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"network.tsx","line":90,"character":16}],"signatures":[{"id":109,"name":"RequireNetwork","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Require a specific `chainId` to be currently connected in the user\'s wallet in order to render the `children` prop.\\nIf the `chainId` does not match, then the `fallback` will be returned.\\nThe {@link useSwitchNetwork} hook can be used to prompt the user to switch their network to the expected network."},"parameters":[{"id":110,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"RequireNetworkProps"}}],"type":{"type":"reference","name":"Element"}}],"permalink":"/ethereal-react/api/ethereal-react/function/RequireNetwork","previousId":4,"nextId":16},{"id":16,"name":"WalletProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"wallet.tsx","line":57,"character":16}],"signatures":[{"id":17,"name":"WalletProvider","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":18,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WalletProviderProps"}}],"type":{"type":"reference","name":"Element"}}],"permalink":"/ethereal-react/api/ethereal-react/function/WalletProvider","previousId":108,"nextId":52},{"id":52,"name":"useBalance","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"accounts.ts","line":40,"character":16}],"signatures":[{"id":53,"name":"useBalance","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads the current Ethers balance (in wei) of the provided address.\\nThis hook will suspend while it loads.","returns":"The current balance of the address, in wei.","tags":[{"tag":"see","text":"https://docs.ethers.io/v5/single-page/#/v5/api/providers/provider/-%23-Provider-getBalance\\n"}]},"parameters":[{"id":54,"name":"address","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The address that you would like to check the balance of. If it is not provided, then the address of the connected wallet is used instead."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"BigNumber"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useBalance","previousId":16,"nextId":71},{"id":71,"name":"useBlock","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"blocks.ts","line":19,"character":16}],"signatures":[{"id":72,"name":"useBlock","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads the most recent block from the network.\\nAs new blocks are added to the network, this hook will automatically load the new block data.\\nThis hook will suspend while it loads.","returns":"A tuple with the `Block` object from `ethers`, and a boolean indicating if the block is currently being refetched.","tags":[{"tag":"see","text":"https://docs.ethers.io/v5/api/providers/provider/#Provider-getBlock"},{"tag":"see","text":"https://docs.ethers.io/v5/api/providers/types/#providers-Block\\n"}]},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"reference","name":"Block"},{"type":"intrinsic","name":"boolean"}]}}}],"permalink":"/ethereal-react/api/ethereal-react/function/useBlock","previousId":52,"nextId":73},{"id":73,"name":"useBlockOnce","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"blocks.ts","line":49,"character":16}],"signatures":[{"id":74,"name":"useBlockOnce","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads the most recent block from the network. This hook only loads the block once,\\nand will not automatically load new blocks.\\nThis hook will suspend while it loads.","returns":"A `Block` object from `ethers`.\\n"},"type":{"type":"reference","name":"Block"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useBlockOnce","previousId":71,"nextId":7},{"id":7,"name":"useConnectToWallet","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"wallet.tsx","line":149,"character":16}],"signatures":[{"id":8,"name":"useConnectToWallet","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":9,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":10,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":11,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}},{"type":"reflection","declaration":{"id":12,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":15,"name":"data","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"void"}]}},{"id":14,"name":"error","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}},{"id":13,"name":"loading","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[15,14,13]}]}}]}}}],"permalink":"/ethereal-react/api/ethereal-react/function/useConnectToWallet","previousId":73,"nextId":25},{"id":25,"name":"useContract","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"contracts.ts","line":44,"character":16}],"signatures":[{"id":26,"name":"useContract","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":27,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":27,"name":"T"}],"name":"ContractInstance"},"default":{"type":"reference","name":"Contract"}}],"parameters":[{"id":28,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":29,"name":"typechainFactoryOrABI","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"ContractInterface"},{"type":"reference","typeArguments":[{"type":"reference","id":27,"name":"T"}],"name":"ContractFactory"}]}}],"type":{"type":"reference","id":27,"name":"T"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useContract","previousId":7,"nextId":90},{"id":90,"name":"useENSForAddress","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"ens.ts","line":32,"character":16}],"signatures":[{"id":91,"name":"useENSForAddress","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":92,"name":"address","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"permalink":"/ethereal-react/api/ethereal-react/function/useENSForAddress","previousId":25,"nextId":75},{"id":75,"name":"useGasPrice","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"gas.ts","line":8,"character":16}],"signatures":[{"id":76,"name":"useGasPrice","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"BigNumber"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useGasPrice","previousId":90,"nextId":19},{"id":19,"name":"useLogout","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"wallet.tsx","line":42,"character":16}],"signatures":[{"id":20,"name":"useLogout","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reflection","declaration":{"id":21,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":22,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"permalink":"/ethereal-react/api/ethereal-react/function/useLogout","previousId":75,"nextId":96},{"id":96,"name":"useNetwork","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"network.tsx","line":17,"character":16}],"signatures":[{"id":97,"name":"useNetwork","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the current chain information for currently-connected Ethereum network.","returns":"An `ethers` `Network` object.","tags":[{"tag":"see","text":"https://docs.ethers.io/v5/api/providers/types/#providers-Network\\n"}]},"type":{"type":"reference","name":"Network"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useNetwork","previousId":19,"nextId":1},{"id":1,"name":"useProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"provider.tsx","line":34,"character":16}],"signatures":[{"id":2,"name":"useProvider","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\\"default\\""}],"type":{"type":"reference","name":"EtherealProvider"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useProvider","previousId":96,"nextId":30},{"id":30,"name":"useReadContract","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"contracts.ts","line":59,"character":16}],"signatures":[{"id":31,"name":"useReadContract","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":32,"name":"TContract","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":32,"name":"TContract"}],"name":"ContractInstance"},"default":{"type":"intrinsic","name":"any"}},{"id":33,"name":"TFunctionName","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":34,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Contract"},{"type":"reference","id":32,"name":"TContract"}]}},{"id":35,"name":"functionName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":33,"name":"TFunctionName"}},{"id":36,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":33,"name":"TFunctionName"},"objectType":{"type":"reference","typeArguments":[{"type":"reference","id":32,"name":"TContract"}],"name":"ContractFunctions"}}],"name":"Parameters"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":33,"name":"TFunctionName"},"objectType":{"type":"reference","typeArguments":[{"type":"reference","id":32,"name":"TContract"}],"name":"ContractFunctions"}}],"name":"ReturnType"}],"name":"Awaited"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useReadContract","previousId":1,"nextId":93},{"id":93,"name":"useResolveENS","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"ens.ts","line":11,"character":16}],"signatures":[{"id":94,"name":"useResolveENS","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":95,"name":"ensName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useResolveENS","previousId":30,"nextId":81},{"id":81,"name":"useSignMessage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"transactions.ts","line":31,"character":16}],"signatures":[{"id":82,"name":"useSignMessage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Used to sign messages with their currently connected wallet.\\nReturns a mutation that can be called with a string, which is the message that should be signed.","tags":[{"tag":"see","text":"https://docs.ethers.io/v5/api/signer/#Signer-signMessage\\n"}]},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":83,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":84,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":85,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"message","isOptional":false,"element":{"type":"intrinsic","name":"string"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]}},{"type":"reflection","declaration":{"id":86,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":89,"name":"data","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":88,"name":"error","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}},{"id":87,"name":"loading","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[89,88,87]}]}}]}}}],"permalink":"/ethereal-react/api/ethereal-react/function/useSignMessage","previousId":93,"nextId":98},{"id":98,"name":"useSwitchNetwork","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"network.tsx","line":49,"character":16}],"signatures":[{"id":99,"name":"useSwitchNetwork","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":100,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"SwitchNetworkOptions"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":101,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":102,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":103,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}},{"type":"reflection","declaration":{"id":104,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":107,"name":"data","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"void"}]}},{"id":106,"name":"error","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}},{"id":105,"name":"loading","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[107,106,105]}]}}]}}}],"permalink":"/ethereal-react/api/ethereal-react/function/useSwitchNetwork","previousId":81,"nextId":55},{"id":55,"name":"useTokenBalance","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"tokens.ts","line":21,"character":16}],"signatures":[{"id":56,"name":"useTokenBalance","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the current token balance for a specified address, or the currently-connected wallet.\\nThis should be used on ERC20 or ERC721 contracts that implement the `balanceOf(address)` function.\\nThis hook will suspend while it loads."},"parameters":[{"id":57,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The smart contract address for the token. Should be an ERC20 or ERC721 contract."},"type":{"type":"reference","name":"Contract"}},{"id":58,"name":"address","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The address. Defaults to the address of the connected wallet.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"BigNumber"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useTokenBalance","previousId":98,"nextId":59},{"id":59,"name":"useTokenMetadata","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"tokens.ts","line":66,"character":16}],"signatures":[{"id":60,"name":"useTokenMetadata","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads the token metadata for a specific token ID.\\nThis loads the metadata by calling `tokenURI` on the contract.\\nToken metadata should support all browser-loadable URIs. IPFS/IPNS URIs are loaded through the https://ipfs.io gateway.\\nThis hook will suspend while it loads.","returns":"A JSON object loaded from the `tokenURI` method of the contract.\\n"},"parameters":[{"id":61,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"An ERC721 contract."},"type":{"type":"reference","name":"Contract"}},{"id":62,"name":"token","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The token ID to load the metadata for."},"type":{"type":"reference","name":"BigNumberish"}}],"type":{"type":"reference","name":"TokenMetadata"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useTokenMetadata","previousId":55,"nextId":63},{"id":63,"name":"useTokenMetadataByIndex","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"tokens.ts","line":81,"character":16}],"signatures":[{"id":64,"name":"useTokenMetadataByIndex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads the token metadata for a specific token at a given index, for a given owner.\\nThis loads the token ID for the given index using the `tokenOfOwnerByIndex` method.\\nThe metadata is loaded using the {@link useTokenMetadata} hook.\\nThis hook will suspend while it loads.","returns":"A JSON object loaded from the `tokenURI` method of the contract.\\n"},"parameters":[{"id":65,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"An ERC721 contract."},"type":{"type":"reference","name":"Contract"}},{"id":66,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The index of the token, for the specific address."},"type":{"type":"reference","name":"BigNumberish"}},{"id":67,"name":"address","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The owner address that will be used to load the token ID. Defaults to the currently connected wallet address."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"TokenMetadata"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useTokenMetadataByIndex","previousId":59,"nextId":50},{"id":50,"name":"useUserAddress","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"accounts.ts","line":21,"character":16}],"signatures":[{"id":51,"name":"useUserAddress","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Loads the public address of the currently connected wallet.\\nThis hook will suspend while it loads."},"type":{"type":"intrinsic","name":"string"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useUserAddress","previousId":63,"nextId":77},{"id":77,"name":"useWaitForTransaction","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"transactions.ts","line":18,"character":16}],"signatures":[{"id":78,"name":"useWaitForTransaction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Waits for a contract transaction (from useWriteContract) to be confirmed on the blockchain."},"parameters":[{"id":79,"name":"transaction","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"ContractTransaction"}},{"id":80,"name":"confirmations","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The number of confirmations to wait for. Defaults to 1.\\n"},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1"}],"type":{"type":"reference","name":"ContractReceipt"}}],"permalink":"/ethereal-react/api/ethereal-react/function/useWaitForTransaction","previousId":50,"nextId":23},{"id":23,"name":"useWeb3Modal","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"wallet.tsx","line":30,"character":16}],"signatures":[{"id":24,"name":"useWeb3Modal","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Core"}]}}],"permalink":"/ethereal-react/api/ethereal-react/function/useWeb3Modal","previousId":77,"nextId":37},{"id":37,"name":"useWriteContract","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"contracts.ts","line":70,"character":16}],"signatures":[{"id":38,"name":"useWriteContract","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":39,"name":"TContract","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":39,"name":"TContract"}],"name":"ContractInstance"},"default":{"type":"intrinsic","name":"any"}},{"id":40,"name":"TFunctionName","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":41,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Contract"},{"type":"reference","id":39,"name":"TContract"}]}},{"id":42,"name":"functionName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":40,"name":"TFunctionName"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":43,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":44,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":45,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":40,"name":"TFunctionName"},"objectType":{"type":"reference","typeArguments":[{"type":"reference","id":39,"name":"TContract"}],"name":"ContractFunctions"}}],"name":"Parameters"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ContractTransaction"}],"name":"Promise"}}]}},{"type":"reflection","declaration":{"id":46,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":49,"name":"data","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"ContractTransaction"}]}},{"id":48,"name":"error","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}},{"id":47,"name":"loading","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[49,48,47]}]}}]}}}],"permalink":"/ethereal-react/api/ethereal-react/function/useWriteContract","previousId":23,"nextId":69}],"groups":[{"title":"Functions","kind":64,"children":[4,108,16,52,71,73,7,25,90,75,19,96,1,30,93,81,98,55,59,63,50,77,23,37]},{"title":"Variables","kind":32,"children":[69,68,70]}],"sources":[{"fileName":"index.ts","line":1,"character":0}],"permalink":"/ethereal-react/api/ethereal-react"},"urlSlug":"ethereal-react"}],"packageName":"ethereal-react","packageVersion":"0.3.2"}]')}}]);