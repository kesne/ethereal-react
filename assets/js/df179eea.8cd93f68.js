"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9424],{7522:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(9901);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=a,m=d["".concat(c,".").concat(h)]||d[h]||s[h]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6643:function(e,t,n){var r=n(9901);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},1478:function(e,t,n){n.d(t,{Z:function(){return d}});var r=n(3920),a=n(9901),i=n(6363),o=n(5905);var l=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},c=n(869),u=n(5789),p="tabItem_1nwP";function s(e){var t,n,r,i=e.lazy,o=e.block,s=e.defaultValue,d=e.values,h=e.groupId,m=e.className,f=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"string"==typeof e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=d?d:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),v=(0,c.duplicates)(y,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===s?s:null!=(t=null!=s?s:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=f[0])?void 0:r.props.value;if(null!==g&&!y.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=l(),k=b.tabGroupChoices,C=b.setTabGroupChoices,T=(0,a.useState)(g),w=T[0],O=T[1],N=[],E=(0,c.useScrollPositionBlocker)().blockElementScrollPositionUntilNextRender;if(null!=h){var x=k[h];null!=x&&x!==w&&y.some((function(e){return e.value===x}))&&O(x)}var j=function(e){var t=e.currentTarget,n=N.indexOf(t),r=y[n].value;r!==w&&(E(t),O(r),null!=h&&C(h,r))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=N.indexOf(e.currentTarget)+1;n=N[r]||N[0];break;case"ArrowLeft":var a=N.indexOf(e.currentTarget)-1;n=N[a]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":o},m)},y.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,u.Z)("tabs__item",p,{"tabs__item--active":w===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:P,onFocus:j,onClick:j},null!=n?n:t)}))),i?(0,a.cloneElement)(f.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function d(e){var t=(0,i.Z)();return a.createElement(s,(0,r.Z)({key:String(t)},e))}},5905:function(e,t,n){var r=(0,n(9901).createContext)(void 0);t.Z=r},14:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return m}});var r=n(3920),a=n(264),i=(n(9901),n(7522)),o=n(1478),l=n(6643),c=["components"],u={sidebar_position:1},p="TypeChain Support",s={unversionedId:"advanced/typechain",id:"advanced/typechain",isDocsHomePage:!1,title:"TypeChain Support",description:"All of the contract methods support TypeChain, which allows for deeper TypeScript integration, with better typings.",source:"@site/docs/advanced/typechain.mdx",sourceDirName:"advanced",slug:"/advanced/typechain",permalink:"/ethereal-react/advanced/typechain",editUrl:"https://github.com/kesne/ethereal-react/edit/main/packages/website/docs/advanced/typechain.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Setting up WalletConnect",permalink:"/ethereal-react/getting-started/wallet-connect"},next:{title:"Common ABIs",permalink:"/ethereal-react/advanced/ABIs"}},d=[{value:"Installing TypeChain",id:"installing-typechain",children:[],level:2},{value:"Configuring TypeChain",id:"configuring-typechain",children:[{value:"Hardhat",id:"hardhat",children:[],level:3}],level:2},{value:"Using TypeChain Generated Contracts",id:"using-typechain-generated-contracts",children:[],level:2}],h={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"typechain-support"},"TypeChain Support"),(0,i.kt)("p",null,"All of the contract methods support ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dethcrypto/TypeChain"},"TypeChain"),", which allows for deeper TypeScript integration, with better typings."),(0,i.kt)("h2",{id:"installing-typechain"},"Installing TypeChain"),(0,i.kt)(o.Z,{groupId:"package-manager",defaultValue:"pnpm",values:[{label:"pnpm",value:"pnpm"},{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"pnpm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add typechain @typechain/ethers-v5 ethers\n"))),(0,i.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add typechain @typechain/ethers-v5 ethers\n"))),(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm add typechain @typechain/ethers-v5 ethers\n")))),(0,i.kt)("h2",{id:"configuring-typechain"},"Configuring TypeChain"),(0,i.kt)("p",null,"TypeChain must be configured to output types for ",(0,i.kt)("inlineCode",{parentName:"p"},"ethers-v5"),". This can be done by setting ",(0,i.kt)("inlineCode",{parentName:"p"},"--target=ethers-v5")," when running the ",(0,i.kt)("inlineCode",{parentName:"p"},"typechain")," command."),(0,i.kt)("h3",{id:"hardhat"},"Hardhat"),(0,i.kt)("p",null,"If you are using hardhat, we recommend using the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@typechain/hardhat"},"hardhat typechain plugin")," to simplify the process of generating types."),(0,i.kt)("h2",{id:"using-typechain-generated-contracts"},"Using TypeChain Generated Contracts"),(0,i.kt)("p",null,"TypeChain emits a contract factory, which can be used in place of the ABI in the ",(0,i.kt)("inlineCode",{parentName:"p"},"useContract")," hook. This will automatically preserve the contract typings, which are also supported in the ",(0,i.kt)("inlineCode",{parentName:"p"},"useReadContract")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"useWriteContract")," hooks."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useContract, useReadContract } from "ethereal-react";\nimport { Greeter__factory } from "./typechain";\n\nfunction Greeter() {\n  const contract = useContract(CONTRACT_ADDRESS, Greeter__factory);\n  // This is type-checked!\n  const greeting = useReadContract(contract, "greeting");\n\n  return <div>Current greeting: {greeting}</div>;\n}\n')))}m.isMDXComponent=!0}}]);