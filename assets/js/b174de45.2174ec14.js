"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[971],{7522:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(9901);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,g=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},678:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(3920),a=n(264),o=(n(9901),n(7522)),i=["components"],s={},c="Displaying User Information",l={unversionedId:"getting-started/displaying-user",id:"getting-started/displaying-user",isDocsHomePage:!1,title:"Displaying User Information",description:"Once the user has connected their wallet, you can load the current address of the connected user with the useUserAddress hook. The useBalance hook can be used to load the balance of the current user as well.",source:"@site/docs/getting-started/02-displaying-user.md",sourceDirName:"getting-started",slug:"/getting-started/displaying-user",permalink:"/ethereal-react/getting-started/displaying-user",editUrl:"https://github.com/kesne/ethereal-react/edit/main/packages/website/docs/getting-started/02-displaying-user.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Connecting to Wallets",permalink:"/ethereal-react/getting-started/connecting-wallet"},next:{title:"Contracts",permalink:"/ethereal-react/getting-started/contracts"}},u=[],d={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"displaying-user-information"},"Displaying User Information"),(0,o.kt)("p",null,"Once the user has connected their wallet, you can load the current address of the connected user with the ",(0,o.kt)("inlineCode",{parentName:"p"},"useUserAddress")," hook. The ",(0,o.kt)("inlineCode",{parentName:"p"},"useBalance")," hook can be used to load the balance of the current user as well."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Suspense } from "react";\nimport { useUserAddress, useBalance } from "ethereal-react";\n\nfunction User() {\n  const address = useUserAddress();\n  const balance = useBalance();\n\n  return (\n    <div>\n      Address {address} currently has balance {balance.toString()}.\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <User />\n    </Suspense>\n  );\n}\n')),(0,o.kt)("p",null,"In order to display a loading UI while the data is loaded, we take advantage of ",(0,o.kt)("inlineCode",{parentName:"p"},"Suspense"),", which will render the ",(0,o.kt)("inlineCode",{parentName:"p"},"fallback"),' while the data is loaded. You can learn more about this in the "',(0,o.kt)("a",{parentName:"p",href:"/ethereal-react/getting-started/loading-and-error-states"},"Loading and Error States"),'" docs.'))}p.isMDXComponent=!0}}]);