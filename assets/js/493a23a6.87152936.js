"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[471],{7522:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(9901);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(n),g=o,m=s["".concat(c,".").concat(g)]||s[g]||d[g]||a;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5559:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return s}});var r=n(3920),o=n(264),a=(n(9901),n(7522)),l=["components"],i={sidebar_position:1},c="Connecting to Wallets",p={unversionedId:"getting-started/connecting-wallet",id:"getting-started/connecting-wallet",isDocsHomePage:!1,title:"Connecting to Wallets",description:"Connecting your dApp to your users wallets is simple, and powered by Web3Modal.",source:"@site/docs/getting-started/connecting-wallet.md",sourceDirName:"getting-started",slug:"/getting-started/connecting-wallet",permalink:"/ethereal-react/getting-started/connecting-wallet",editUrl:"https://github.com/kesne/ethereal-react/edit/main/packages/website/docs/getting-started/connecting-wallet.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Installing",permalink:"/ethereal-react/installing"},next:{title:"Displaying User Information",permalink:"/ethereal-react/getting-started/displaying-user"}},u=[{value:"Creating the Wallet Provider",id:"creating-the-wallet-provider",children:[]},{value:"Connect to Wallet Button",id:"connect-to-wallet-button",children:[]},{value:"Pre-Configured Web3Modal Instance",id:"pre-configured-web3modal-instance",children:[]},{value:"Logging Out (Disconnect Wallet)",id:"logging-out-disconnect-wallet",children:[]}],d={toc:u};function s(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"connecting-to-wallets"},"Connecting to Wallets"),(0,a.kt)("p",null,"Connecting your dApp to your users wallets is simple, and powered by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Web3Modal/web3modal"},"Web3Modal"),"."),(0,a.kt)("h2",{id:"creating-the-wallet-provider"},"Creating the Wallet Provider"),(0,a.kt)("p",null,"To allow users to connect their wallet, you wrap your application in a ",(0,a.kt)("inlineCode",{parentName:"p"},"WalletProvider")," component. This component will manage the"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"children")," passed to this component will ",(0,a.kt)("em",{parentName:"p"},"not be rendered")," until the wallet is connected. When the wallet is not connected, the ",(0,a.kt)("inlineCode",{parentName:"p"},"fallback")," prop will be used instead. This prop should be used to render a prompt for the user to connect their wallet to your application."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { WalletProvider } from "ethereal-react";\n\nfunction App() {\n  return (\n    <WalletProvider fallback={<ConnectButton />} cacheProvider>\n      <div>Your wallet is connected!</div>\n    </WalletProvider>\n  );\n}\n')),(0,a.kt)("p",null,"In this example, we use the ",(0,a.kt)("inlineCode",{parentName:"p"},"cacheProvider")," property, which will automatically cache the users last connected wallet, and will connect to it by default when your application is opened."),(0,a.kt)("h2",{id:"connect-to-wallet-button"},"Connect to Wallet Button"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useConnectToWallet, WalletProvider } from "ethereal-react";\n\nfunction ConnectButton() {\n  const [connect, { loading, error }] = useConnectToWallet();\n\n  return (\n    <div>\n      {error && <div>Error connecting to wallet: {error.message}</div>}\n\n      <button onClick={connect} disabled={loading}>\n        Connect to Wallet\n      </button>\n    </div>\n  );\n}\n')),(0,a.kt)("h2",{id:"pre-configured-web3modal-instance"},"Pre-Configured Web3Modal Instance"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"WalletProvider")," component supports all props that can be passed to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Web3Modal/web3modal"},(0,a.kt)("inlineCode",{parentName:"a"},"Web3Modal"))," constructor. If you already have a ",(0,a.kt)("inlineCode",{parentName:"p"},"Web3Modal")," instance, you can also use that directly via the ",(0,a.kt)("inlineCode",{parentName:"p"},"web3Modal")," prop, rather than having the ",(0,a.kt)("inlineCode",{parentName:"p"},"WalletProvider")," construct one for you."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Web3Modal } from "web3modal";\n\nconst web3Modal = new Web3Modal({\n  // Options...\n});\n\nfunction App() {\n  return (\n    <WalletProvider web3Modal={web3Modal} fallback={<ConnectButton />}>\n      <ConnectedApp />\n    </WalletProvider>\n  );\n}\n')),(0,a.kt)("h2",{id:"logging-out-disconnect-wallet"},"Logging Out (Disconnect Wallet)"),(0,a.kt)("p",null,"When your user has connected their wallet to your app, you may want to allow them to disconnect their wallet. This is done through the ",(0,a.kt)("inlineCode",{parentName:"p"},"useLogout")," hook. This hook must be rendered within the ",(0,a.kt)("inlineCode",{parentName:"p"},"WalletProvider")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useLogout } from "ethereal-react";\n\nfunction LogoutButton() {\n  const logout = useLogout();\n  return <button onClick={logout}>Logout</button>;\n}\n')),(0,a.kt)("p",null,"When the logout button is clicked, the ",(0,a.kt)("inlineCode",{parentName:"p"},"fallback")," of the ",(0,a.kt)("inlineCode",{parentName:"p"},"WalletProvider")," will be rendered. If the ",(0,a.kt)("inlineCode",{parentName:"p"},"cachedProvider")," property is set, then the cached providers will be removed as well."))}s.isMDXComponent=!0}}]);