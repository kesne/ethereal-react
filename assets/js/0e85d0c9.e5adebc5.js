"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1996],{7522:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(9901);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,k=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(k,c(c({ref:t},u),{},{components:n})):r.createElement(k,c({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5948:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(3920),o=n(264),a=(n(9901),n(7522)),c=["components"],i={sidebar_position:5},l="Blocks",s={unversionedId:"advanced/blocks",id:"advanced/blocks",isDocsHomePage:!1,title:"Blocks",description:"Reading the current block",source:"@site/docs/advanced/blocks.md",sourceDirName:"advanced",slug:"/advanced/blocks",permalink:"/ethereal-react/advanced/blocks",editUrl:"https://github.com/kesne/ethereal-react/edit/main/packages/website/docs/advanced/blocks.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Resolving ENS",permalink:"/ethereal-react/advanced/ENS"},next:{title:"Static Providers",permalink:"/ethereal-react/advanced/static-providers"}},u=[{value:"Reading the current block",id:"reading-the-current-block",children:[]},{value:"Block notification",id:"block-notification",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"blocks"},"Blocks"),(0,a.kt)("h2",{id:"reading-the-current-block"},"Reading the current block"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useBlock")," hook can be used to read information about the latest block in the network. This returns a tuple containing:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An ",(0,a.kt)("a",{parentName:"li",href:"https://docs.ethers.io/v5/api/providers/types/#providers-Block"},"ethers block object"),". This will automatically update as new blocks are added."),(0,a.kt)("li",{parentName:"ul"},"A boolean that indicates if a new block has been added, and its metadata is currently being fetched. This boolean will only return ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," for versions React that support concurrent rendering (React 18+)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useBlock } from "ethereal-react";\n\nfunction BlockWatcher() {\n  const [block, isInFlight] = useBlock();\n\n  return (\n    <div>\n      Current Block: {block.timestamp}\n      Block refetching: {isInFlight}\n    </div>\n  );\n}\n')),(0,a.kt)("h2",{id:"block-notification"},"Block notification"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"useOnBlock")," hook to be notified of whenever new blocks are added to the blockchain."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useOnBlock } from "ethereal-react";\n\nfunction BlockWatcher() {\n  useOnBlock(() => {\n    console.log("A new block was added.");\n  });\n}\n')))}p.isMDXComponent=!0}}]);